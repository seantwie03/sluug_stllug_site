---
import { SLUUG_SITE_URL, STLLUG_SITE_URL } from '@/constants';
import type { MeetingType } from '@/content/config';
import { Icon } from 'astro-icon/components';

type Props = {
    meetingDate: Date;
    meetingType: MeetingType;
};

const { meetingDate, meetingType } = Astro.props;
---

<!-- Create a custom element to pass in data from the props into the script tag that runs client-side. This is the 
 method suggested by the Astro documentation (6/30/2024).
 https://docs.astro.build/en/guides/client-side-scripts/#pass-frontmatter-variables-to-scripts -->
<connection-banner data-meetingdate={meetingDate}>
    <div id="connection-banner" class="bg-yellow-100 border-l-8 border-yellow-500 p-4 mb-6">
        <!-- <h2 id="display-date" class="font-bold">{meetingDate}</h2> -->
        <h3>
            <a
                href={meetingType === 'SLUUG' ? `${SLUUG_SITE_URL}/next.txt` : `${STLLUG_SITE_URL}/next.txt`}
                target="_blank"
                rel="noopener noreferrer"
            >
                Connection Information will be provided in this link on the day of the meeting.
                <Icon class="inline" name="mdi:open-in-new" />
            </a>
        </h3>
        <p>
            The meeting will open at <strong>6:00p.m. Central Time</strong>.
        </p>
        <p>
            The presentation(s) will begin at <strong>6:30p.m. Central Time</strong>.
        </p>
    </div>
</connection-banner>

<script>
    /**
     * Hide the ConnectionBanner if the meeting occurred more than 24h ago.
     * By default, the connection banner is visible. This is intentional. It means the failure state is to show the
     * connection banner. I would rather have the connection banner shown too much than not shown when it should be.
     * Some people might have JavaScript disabled in their browser. I would rather have these people see the
     * connection banner even if the meeting is not today than not see it ever.
     */
    class ConnectionBanner extends HTMLElement {
        constructor() {
            super();
            const stopShowingBannerOn = new Date(this.dataset.meetingdate!);
            stopShowingBannerOn.setDate(stopShowingBannerOn.getDate() + 1);

            if (stopShowingBannerOn.getTime() < new Date().getTime()) {
                const connectionBanner = document.getElementById('connection-banner');
                if (connectionBanner) {
                    connectionBanner.style.display = 'none';
                }
            }
        }
    }
    customElements.get('connection-banner') || customElements.define('connection-banner', ConnectionBanner);
</script>
