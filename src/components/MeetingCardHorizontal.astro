---
import { getDisplayDate } from "@/buildTimeUtils";
import { SLUUG_SITE_URL, STLLUG_SITE_URL } from "@/constants";
import type { Meeting } from "@/content/config";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
type Props = { key: number; url: string } & Meeting;

const { key, url, meetingType, meetingDate, presentations, meetupUrl, image, youtubeUrl } = Astro.props;
---

<p class="text-txt_subtle-light dark:text-txt_subtle text-md">
    {meetingType} - {getDisplayDate(meetingDate)}
</p>
<div class="flex mb-4 rounded shadow-xl">
    <a href={image.src.src}
        ><Image src={image.src} alt={image.alt} height="240" width="240" loading="lazy" decoding="async" /></a
    >
    <div class="flex flex-row justify-between w-full">
        {
            presentations.map((presentation, i) => (
                <>
                    <a
                        href={url}
                        class="flex flex-col pl-2 text-current no-underline text-txt_normal-light dark:text-txt_normal"
                        style={`width: ${100 / presentations.length}%`}
                    >
                        <h3>{presentation.title}</h3>

                        <h5 class="mt-2">
                            By:
                            {presentation.presenterNames.join(" & ")}
                        </h5>
                    </a>
                    {i < presentations.length - 1 && (
                        <div class="border-r border-gray-300 mx-1" style="height: auto;" />
                    )}
                </>
            ))
        }

        <div class="flex flex-col items-start justify-between m-1">
            <!-- Create a custom element to pass in data from the props into the script tag that runs client-side. 
             This is the method suggested by the Astro documentation (6/30/2024).
             https://docs.astro.build/en/guides/client-side-scripts/#pass-frontmatter-variables-to-scripts -->
            <zoom-link id=`zoom-link-${key}` data-key={key} data-meetingdate={meetingDate} class="w-[8.5rem] h-[2rem]">
                <a
                    href={meetingType === "SLUUG" ? `${SLUUG_SITE_URL}/next.txt` : `${STLLUG_SITE_URL}/next.txt`}
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    <div
                        class="inline-flex justify-center items-center bg-bg_emphasis-light dark:bg-bg_emphasis text-md font-semibold px-4 rounded-full shadow h-full w-full"
                    >
                        <Icon name="mdi:microphone-plus" class="mr-1" />
                        Zoom
                    </div>
                </a>
            </zoom-link>

            {
                youtubeUrl && (
                    <a href={youtubeUrl} target="_blank" rel="noopener noreferrer" class="w-[8.5rem] h-[2rem]">
                        <div class="inline-flex justify-center items-center bg-bg_emphasis-light dark:bg-bg_emphasis text-md font-semibold rounded-full shadow w-full h-full">
                            <Icon name="mdi:youtube" class="mr-1" />
                            YouTube
                        </div>
                    </a>
                )
            }
            {
                meetupUrl && (
                    <a href={meetupUrl} target="_blank" rel="noopener noreferrer" class="w-[8.5rem] h-[2rem]">
                        <div class="inline-flex justify-center items-center bg-bg_emphasis-light dark:bg-bg_emphasis text-md font-semibold px-4 rounded-full shadow w-full h-full">
                            <Icon name="mdi:meetup" class="mr-1" />
                            Meetup
                        </div>
                    </a>
                )
            }
            <a href={url} class="w-[8.5rem] h-[2rem]">
                <div
                    class="inline-flex justify-center items-center bg-bg_emphasis-light dark:bg-bg_emphasis text-md font-semibold px-4 rounded-full shadow w-full h-full"
                >
                    Read More <Icon name="mdi:arrow-right-thin" class="ml-1" />
                </div>
            </a>
        </div>
    </div>
</div>

<script>
    /**
     * Hide the ZoomLink if the meeting occurred more than 24h ago.
     * By default, the connection banner is visible. This is intentional. It means the failure state is to show the
     * connection banner. I would rather have the connection banner shown too much than not shown when it should be.
     * Some people might have JavaScript disabled in their browser. I would rather have these people see the
     * connection banner even if the meeting is not today than not see it ever.
     */
    class ZoomLink extends HTMLElement {
        constructor() {
            super();
            const stopShowingBannerOn = new Date(this.dataset.meetingdate!);
            stopShowingBannerOn.setDate(stopShowingBannerOn.getDate() + 1);

            const key = this.dataset.key!;
            if (stopShowingBannerOn.getTime() < new Date().getTime()) {
                const zoomLink = document.getElementById(`zoom-link-${key}`);
                if (zoomLink) {
                    zoomLink.style.display = "none";
                }
            }
        }
    }
    customElements.get("zoom-link") || customElements.define("zoom-link", ZoomLink);
</script>
