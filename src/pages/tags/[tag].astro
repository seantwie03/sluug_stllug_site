---
import { sortMeetingListByMeetingDate } from '@/buildTimeUtils';
import MeetingCardHorizontal from '@/components/MeetingCardHorizontal.astro';
import MeetingCardVertical from '@/components/MeetingCardVertical.astro';
import MeetingListing from '@/components/MeetingListing.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const allMeetings = await getCollection('meetings');
    const uniqueTags = [
        ...new Set([
            ...allMeetings
                .map((meeting) => meeting.data.presentations.map((presentation) => presentation.tags))
                .flat()
                .flat(),
        ]),
    ];
    return uniqueTags.map((tag) => {
        const filteredPosts = sortMeetingListByMeetingDate(
            allMeetings.filter((meeting) =>
                meeting.data.presentations.some((presentation) => presentation.tags.includes(tag)),
            ),
        );
        return {
            params: { tag },
            props: { meetings: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { meetings } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <h2 data-pagefind-ignore>Presentations tagged with: <strong>{tag}</strong></h2>
    <div class="flex flex-wrap lg:hidden">
        {
            meetings.map(
                (
                    { collection, id, data: { meetingDate, meetingType, presentations, image, meetupUrl, youtubeUrl } },
                    i,
                ) => (
                    <MeetingCardVertical
                        key={i}
                        url={`/${collection}/${id}/`}
                        meetingType={meetingType}
                        meetingDate={meetingDate}
                        presentations={presentations}
                        image={image}
                        meetupUrl={meetupUrl}
                        youtubeUrl={youtubeUrl}
                    />
                ),
            )
        }
    </div>
    <div class="hidden lg:block">
        {
            meetings.map(
                (
                    { collection, id, data: { meetingDate, meetingType, presentations, image, meetupUrl, youtubeUrl } },
                    i,
                ) => (
                    <MeetingCardHorizontal
                        key={i + 1000}
                        url={`/${collection}/${id}/`}
                        meetingType={meetingType}
                        meetingDate={meetingDate}
                        presentations={presentations}
                        image={image}
                        meetupUrl={meetupUrl}
                        youtubeUrl={youtubeUrl}
                    />
                ),
            )
        }
    </div>
</BaseLayout>
