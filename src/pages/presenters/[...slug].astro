---
import { sortMeetingListByMeetingDate } from '@/buildTimeUtils';
import MeetingListing from '@/components/MeetingListing.astro';
import PresenterLayout from '@/layouts/PresenterLayout.astro';
import type { InferGetStaticPropsType } from 'astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const presenterEntries = await getCollection('presenters');
    return presenterEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { entry } = Astro.props;
const { Content } = await entry.render();

const meetings = sortMeetingListByMeetingDate(
    await getCollection('meetings', ({ data }) => {
        return data.presentations.some((presentation) =>
            presentation.presenterNames.includes(entry.data.presenterName),
        );
    }),
);
---

<PresenterLayout presenterName={entry.data.presenterName} lastUpdated={entry.data.lastUpdated}>
    <Content />

    <h2>Presentations</h2>
    {
        meetings.map((meeting) => (
            <MeetingListing
                url={`/meetings/${meeting.id}/`}
                meetingType={meeting.data.meetingType}
                meetingDate={meeting.data.meetingDate}
                presentations={meeting.data.presentations}
                images={meeting.data.images}
                meetupUrl={meeting.data.meetupUrl}
                youtubeUrl={meeting.data.youtubeUrl}
            />
        ))
    }
</PresenterLayout>
