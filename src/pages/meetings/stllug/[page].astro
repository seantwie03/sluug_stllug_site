---
import { sortMeetingListByMeetingDate } from "@/buildTimeUtils";
import MeetingCardHorizontal from "@/components/MeetingCardHorizontal.astro";
import MeetingCardVertical from "@/components/MeetingCardVertical.astro";
import Pagination from "@/components/Pagination.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";

export const getStaticPaths = (async ({ paginate }) => {
    const stllugMeetings = sortMeetingListByMeetingDate(
        await getCollection("meetings", ({ data }) => {
            return data.meetingType === "STLLUG";
        })
    );
    return paginate(stllugMeetings, { pageSize: 12 });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const pageTitle = "STLLUG - St. Louis Linux Users Group";

const { page } = Astro.props;
---

<BaseLayout pageTitle={pageTitle}>
    {
        page.currentPage === 1 && (
            <>
                <h2>St. Louis Linux Users Group</h2>
                <p>
                    The <em>St. Louis Linux Users Group (STLLUG)</em> meets <strong>eight days after SLUUG</strong>.
                    This is typically the <em>third Thursday</em> of each month. The meeting begins at 6:30p.m. Central
                    Time.
                </p>
                <h2>Meeting Agenda</h2>
                <p>
                    At <strong>6:00p.m. Central Time</strong> the meeting opens. Participants are encouraged to join at
                    this time to if they need to test their microphone, screen sharing, and video camera.
                </p>
                <p>
                    At <strong>6:30p.m. Central Time</strong> we attempt a quick welcome, introductions, announcements,
                    current events of interest, and a general CALL FOR HELP (Questions and Answers) segment.
                </p>
                <p>
                    At <strong>6:45p.m. Central Time</strong> the presentation begins.
                </p>
            </>
        )
    }
    <h2>STLLUG Meetings</h2>
    <div class="flex flex-wrap lg:hidden">
        {
            page.data.map(
                (
                    { collection, id, data: { meetingDate, meetingType, presentations, image, meetupUrl, youtubeUrl } },
                    i
                ) => (
                    <MeetingCardVertical
                        key={i}
                        url={`/${collection}/${id}/`}
                        meetingType={meetingType}
                        meetingDate={meetingDate}
                        presentations={presentations}
                        image={image}
                        meetupUrl={meetupUrl}
                        youtubeUrl={youtubeUrl}
                    />
                )
            )
        }
    </div>
    <div class="hidden lg:block">
        {
            page.data.map(
                (
                    { collection, id, data: { meetingDate, meetingType, presentations, image, meetupUrl, youtubeUrl } },
                    i
                ) => (
                    <MeetingCardHorizontal
                        key={i + 1000}
                        url={`/${collection}/${id}/`}
                        meetingType={meetingType}
                        meetingDate={meetingDate}
                        presentations={presentations}
                        image={image}
                        meetupUrl={meetupUrl}
                        youtubeUrl={youtubeUrl}
                    />
                )
            )
        }
    </div>
    <Pagination url={page.url} currentPage={page.currentPage} lastPage={page.lastPage} />
</BaseLayout>
