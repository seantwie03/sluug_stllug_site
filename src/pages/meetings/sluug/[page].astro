---
import { sortMeetingListByMeetingDate } from "@/buildTimeUtils";
import MeetingCardHorizontal from "@/components/MeetingCardHorizontal.astro";
import MeetingCardVertical from "@/components/MeetingCardVertical.astro";
import Pagination from "@/components/Pagination.astro";
import SluugAgenda from "@/components/SluugAgenda.astro";
import { SLUUG_LOGO_ALT } from "@/constants";
import sluugLogo from "@/images/SLUUG-Logo.png";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";

export const getStaticPaths = (async ({ paginate }) => {
    const sluugMeetings = sortMeetingListByMeetingDate(
        await getCollection("meetings", ({ data }) => {
            return data.meetingType === "SLUUG";
        })
    );
    return paginate(sluugMeetings, { pageSize: 12 });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const pageTitle = "SLUUG - St. Louis Unix Users Group";

const { page } = Astro.props;
---

<head>
    <meta name="twitter:card" content="player" />
    <meta property="twitter:image" content={Astro.site + sluugLogo.src} />
    <meta property="og:url" content={Astro.site + Astro.url.pathname} />
    <meta property="og:type" content="article" />
    <meta property="og:image" content={Astro.site + sluugLogo.src} />
    <meta property="og:image:alt" content={Astro.site + SLUUG_LOGO_ALT} />
    <meta property="og:image:width" content="1024" />
    <meta property="og:image:height" content="1024" />
    <meta property="og:title" content="St. Louis Unix Users Group Meetings" />
    <meta
        property="og:description"
        content={"The St. Louis Unix Users Group holds regular meetings with technical presentations and discussions. Our topics frequently involve Unix, Unix-like Operating Systems, Linux, BSD, and other..."}
    />
</head>

<BaseLayout pageTitle={pageTitle}>
    {
        page.currentPage === 1 && (
            <>
                <>
                    <h2>St. Louis Unix Users Group</h2>
                    <p>
                        The <em>St. Louis Unix Users Group (SLUUG)</em> meets on the <strong>second Wednesday</strong>{" "}
                        of each month. The meeting begins at 6:30p.m. Central Time.
                    </p>
                    <SluugAgenda />
                </>
                <h2>SLUUG Meetings</h2>
                <div class="flex flex-wrap lg:hidden">
                    {page.data.map(
                        (
                            {
                                collection,
                                id,
                                data: { meetingDate, meetingType, presentations, image, meetupUrl, youtubeUrl },
                            },
                            i
                        ) => (
                            <MeetingCardVertical
                                key={i}
                                url={`/${collection}/${id}/`}
                                meetingType={meetingType}
                                meetingDate={meetingDate}
                                presentations={presentations}
                                image={image}
                                meetupUrl={meetupUrl}
                                youtubeUrl={youtubeUrl}
                            />
                        )
                    )}
                </div>
                <div class="hidden lg:block">
                    {page.data.map(
                        (
                            {
                                collection,
                                id,
                                data: { meetingDate, meetingType, presentations, image, meetupUrl, youtubeUrl },
                            },
                            i
                        ) => (
                            <MeetingCardHorizontal
                                key={i + 1000}
                                url={`/${collection}/${id}/`}
                                meetingType={meetingType}
                                meetingDate={meetingDate}
                                presentations={presentations}
                                image={image}
                                meetupUrl={meetupUrl}
                                youtubeUrl={youtubeUrl}
                            />
                        )
                    )}
                </div>
                <Pagination url={page.url} currentPage={page.currentPage} lastPage={page.lastPage} />
            </>
        )
    }
</BaseLayout>
