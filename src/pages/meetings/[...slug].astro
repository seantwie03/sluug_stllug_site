---
import ConnectionBanner from "@/components/ConnectionBanner.astro";
import MeetingMaterials from "@/components/MeetingMaterials.astro";
import MeetingTitle from "@/components/MeetingTitle.astro";
import ResponsiveYouTubeEmbed from "@/components/ResponsiveYouTubeEmbed.astro";
import SluugAgenda from "@/components/SluugAgenda.astro";
import StllugAgenda from "@/components/StllugAgenda.astro";
import PresentationSection from "@/components/presentation/PresentationSection.astro";
import type { Presentation } from "@/content/config";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
    const meetingEntries = await getCollection("meetings");
    return meetingEntries.map((entry) => ({
        params: { slug: entry.id },
        props: { entry },
    }));
}

const {
    entry: {
        data: { meetingType, meetingDate, presentations, image, meetupUrl, youtubeUrl },
    },
} = Astro.props;
---

<head>
    <meta name="twitter:card" content="player" />
    <meta property="twitter:image" content={Astro.site + image.src.src} />
    <meta property="og:image" content={Astro.site + image.src.src} />
    <meta property="og:image:alt" content={Astro.site + image.alt} />
    <meta property="og:image:width" content="1280" />
    <meta property="og:image:height" content="720" />
    <meta property="og:title" content={presentations[0].title} />
    <meta property="og:description" content={`By: ${presentations[0].presenterNames.join(" & ")}`} />
</head>

<BaseLayout pageTitle=`${meetingType} - ${(meetingDate as Date).toISOString().slice(0, 10)}`>
    <ConnectionBanner meetingType={meetingType} meetingDate={meetingDate} />
    <div class="flex flex-col items-center">
        <MeetingTitle meetingType={meetingType} meetingDate={meetingDate} meetupUrl={meetupUrl} />
        {
            youtubeUrl ? (
                <ResponsiveYouTubeEmbed url={youtubeUrl} />
            ) : (
                <Image src={image.src} alt={image.alt} loading="lazy" decoding="async" />
            )
        }
        {
            presentations.map((presentation: Presentation) => (
                <div class="mt-8">
                    <PresentationSection {...presentation} />
                </div>
            ))
        }
    </div>
    <div class="mt-2 mb-8">
        <MeetingMaterials meetingType={meetingType} meetingDate={meetingDate} />
        {meetingType === "SLUUG" && <SluugAgenda />}
        {meetingType === "STLLUG" && <StllugAgenda />}
    </div>
</BaseLayout>
