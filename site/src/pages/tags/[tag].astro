---
import { getCollection } from 'astro:content';
import MeetingListing from '@/components/MeetingListing.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { sortMeetingListByMeetingDate } from '@/buildTimeUtils';

export async function getStaticPaths() {
    const allMeetings = await getCollection('meetings');
    const uniqueTags = [
        ...new Set([
            ...allMeetings.map((meeting) => meeting.data.main.tags).flat(),
            ...allMeetings
                .map((meeting) => meeting.data.base)
                .filter((base): base is Exclude<typeof base, null | undefined> => Boolean(base))
                .map((base) => base.tags)
                .flat(),
        ]),
    ];
    return uniqueTags.map((tag) => {
        const filteredPosts = sortMeetingListByMeetingDate(
            allMeetings.filter(
                (meeting) => meeting.data.main.tags.includes(tag) || meeting.data.base?.tags.includes(tag),
            ),
        );
        return {
            params: { tag },
            props: { meetings: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { meetings } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <p data-pagefind-ignore>Presentations tagged with: <strong>{tag}</strong></p>
    <ul>
        {
            meetings.map((meeting: any) => (
                <MeetingListing
                    url={`/meetings/${meeting.slug}/`}
                    meetingType={meeting.data.meetingType}
                    meetingDate={meeting.data.meetingDate}
                    main={meeting.data.main}
                    base={meeting.data.base}
                    meetupUrl={meeting.data.meetupUrl}
                    youtubeUrl={meeting.data.youtubeUrl}
                />
            ))
        }
    </ul>
</BaseLayout>
