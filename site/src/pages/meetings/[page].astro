---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import MeetingListing from '@/components/MeetingListing.astro';
import { sortMeetingListByMeetingDate } from '@/buildTimeUtils';
import Pagination from '@/components/Pagination.astro';
export async function getStaticPaths({ paginate }: any) {
    const allMeetings = sortMeetingListByMeetingDate(await getCollection('meetings'));
    return paginate(allMeetings, { pageSize: 24 });
}

const pageTitle = 'St. Louis Unix/Linux Users Group';

const { page } = Astro.props as any;
---

<BaseLayout pageTitle={pageTitle}>
    <h3 class="text-center lg:hidden m-0">St. Louis</h3>
    <h1 class="text-center lg:hidden m-0">Unix & Linux</h1>
    <h2 class="text-center lg:hidden m-0 mb-2">Users Groups</h2>
    {
        page.currentPage === 1 && (
            <p class="mb-6">
                The St. Louis Unix and Linux Users Groups hold regular meetings with technical presentations and
                discussions. Our topics frequently involve Unix, Unix-like Operating Systems, Linux, BSD, and other Free
                and Open Source Software (FOSS) applications, products, projects and services. All of our meetings are
                free and open to the public.
            </p>
        )
    }
    {
        page.data.map((data: any) => (
            <MeetingListing
                url={`/meetings/${data.slug}/`}
                meetingType={data.data.meetingType}
                meetingDate={data.data.meetingDate}
                main={data.data.main}
                base={data.data.base}
                meetupUrl={data.data.meetupUrl}
                youtubeUrl={data.data.youtubeUrl}
            />
        ))
    }
    <Pagination url={page.url} currentPage={page.currentPage} lastPage={page.lastPage} />
</BaseLayout>
